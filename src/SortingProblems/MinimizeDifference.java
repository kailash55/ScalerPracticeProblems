package SortingProblems;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

public class MinimizeDifference {

	
	
	public static void main(String[] args) {
		ArrayList<Integer> arr = new ArrayList<Integer>(Arrays.asList(6238, 28848, 21527, 15679, 32351, 24875, 12909, 19743, 8019, 6348, 5970, 26973, 7955, 31834, 9084, 678, 29482, 5255, 16613, 3801, 24198, 27347, 7201, 27917, 21876, 11692, 18414, 19157, 24011, 24538, 16141, 28355, 16230, 5914, 14416, 3114, 6360, 3593, 245, 1064, 11356, 3396, 20786, 14308, 30987, 28622, 20241, 20501, 29778, 18098, 13182, 7620, 30626, 24553, 17822, 30802, 13929, 13437, 8291, 15548, 20546, 495, 30302, 21022, 21352, 4823, 18388, 22390, 17265, 31434, 16147, 24235, 30777, 18816, 9990, 22734, 26908, 31030, 12296, 6047, 14440, 7250, 30454, 2131, 4881, 3654, 648, 2964, 14503, 11190, 10977, 3786, 16262, 21981, 8036, 19097, 26957, 17709, 32458, 19114, 7057, 28469, 13681, 8879, 20690, 968, 5623, 29857, 5549, 17756, 24584, 11340, 26196, 16560, 10612, 5134, 60, 10162, 23941, 9948, 31765, 21407, 18063, 17285, 17407, 12908, 21960, 9531, 14843, 9061, 7514, 17743, 8863, 1812, 12471, 2620, 10255, 1636, 24365, 26599, 2344, 21766, 31930, 21797, 18686, 29460, 11553, 14974, 29321, 12788, 25917, 15921, 17563, 128, 5782, 4471, 23061, 16995, 14642, 8972, 8795, 14022, 10158, 23276, 15877, 12845, 397, 17242, 5080, 12187, 1999, 17191, 12788, 31997, 10181, 19761, 20302, 1733, 10277, 10538, 353, 1750, 11354, 14747, 31265, 6816, 541, 25384, 25137, 1164, 27977, 30997, 9045, 7322, 26091, 21257, 14122, 13384, 31897, 28690, 19989, 29111, 22790, 19178, 25209, 26121, 1747, 17273, 3117, 25357, 1191, 16794, 10285, 21534, 18817, 29986, 10383, 7752, 13389, 22303, 8377, 19373, 6582, 20573, 25042, 1575, 25660, 10543, 15222, 9519, 31366, 9835, 13486, 21246, 24569, 30647, 20767, 3313, 17289, 23299, 13953, 818, 28879, 6487, 18003, 7061, 22364, 16591, 32717, 7104, 7246, 16356, 15895, 16015, 27169, 17900, 9912, 14519, 29383, 3300, 23633, 28841, 22522, 28782, 18827, 28089, 28113, 30230, 6222, 17023, 2961, 10969, 10548, 30333, 24262, 31208, 7997, 13059, 29843, 24745, 21444, 14160, 27975, 9215, 18097, 22522, 3632, 27339, 24305, 3472, 9652, 25011, 3875, 22141, 30109, 19490, 12948, 28719, 6069, 9871, 13934, 11129, 4243, 15875, 25388, 24630, 1204, 24789, 23121, 17456, 17358, 3256, 7258, 10560, 7776, 15865, 10993, 26294, 14734, 17409, 7011, 29178, 21804, 16161, 11604, 27252, 14361, 11151, 14770, 7338, 14030, 7595, 3559, 16552, 2102, 4999, 1875, 30629, 23745, 32679, 761, 19683, 27572, 28933, 30072, 15831, 27331, 31832, 16190, 3466, 9185, 19094, 4344, 26431, 7511, 28856, 29772, 5206, 2067, 29885, 19659, 18800, 26691, 9201, 25889, 20180, 11299, 7791, 23695, 2066, 9491, 15333, 2204, 7910, 5869, 11671, 7943, 21854, 20885, 423, 15359, 17215, 2258, 27539, 6294, 678, 24156, 30207, 1396, 4075, 21046, 437, 32200, 24778, 3389, 13802, 26245, 30405, 14850, 17859, 19914, 28868, 24533, 12055, 16033, 24575, 29730, 22135, 31981, 25629, 5633, 9323, 15774, 21149, 10248, 2047, 12071, 28022, 15459, 638, 26162, 27898, 1831, 8318, 658, 24832, 19172, 1052, 8313, 11586, 29562, 25737, 27115, 9476, 21293, 9926, 23666, 2551, 13819, 29611, 5908, 29276, 16172, 28462, 17538, 23148, 17708, 29922, 30098, 25848, 8086, 32190, 32751, 3917, 7057, 4896, 13583, 23642, 2655, 29457, 1382, 15125, 7731, 18891, 25562, 11290, 2371, 9337, 32118, 27285, 4895, 317, 6498, 7267, 6209, 8311, 13587, 19828, 10213, 31557, 12479, 14964, 13339, 838, 8212, 11946, 2074, 4004, 4905, 31008, 30935, 6993, 27573, 15620, 982, 14480, 4735, 8526, 20544, 23992, 8469, 9123, 17975, 28468, 21441, 4729, 12390, 10959, 22457, 29309, 7132, 22575, 18838, 21297, 27162, 25246, 30727, 22234, 18794, 16401, 16071, 29081, 1907, 18786, 3532, 9176, 29195, 26593, 28866, 13287, 14924, 15371, 10935, 10983, 3562, 8601, 14872, 6376, 23235, 13501, 22748, 25678, 28856, 15528, 19711, 10361, 30140, 8015, 7474, 26533, 24618, 17007, 32209, 5134, 27484, 32206, 2581, 13400, 14969, 709, 7563, 10031, 7566, 23803, 25028, 18987, 11489, 28787, 25678, 2038, 11906, 6345, 18660, 4528, 31266, 19896, 27618, 18322, 20264, 28896, 2300, 5330, 20738, 10438, 14894, 17095, 7609, 27933, 25334, 1870, 13001, 10308, 23490, 21100, 5167, 4623, 29092, 7989, 27075, 10186, 3661, 19436, 1736, 25979, 7225, 15723, 4034, 9320, 31527, 20933, 12935, 17113, 6348, 26155, 9369, 31007, 456, 29708, 23475, 32725, 32473, 2432, 13474, 27494, 4687, 8423, 31830, 24784, 27072, 7117, 3897, 1959, 6140, 25874, 704, 23900, 11075, 32327, 3391, 19903, 29622, 31834, 8193, 13507, 3596, 14198, 26520, 11649, 1670, 12837, 9842, 21120, 10277, 31672, 7597, 21300, 19482, 4584, 30764, 708, 15742, 1469, 27627, 17425, 1347, 26543, 1423, 30451, 12907, 16140, 21058, 19141, 29303, 4249, 23485, 6693, 3619, 14460, 10918, 13301, 7760, 7001, 17181, 13733, 3394, 29372, 20370, 23221, 14347, 14519, 28121, 25973, 17479, 30412, 21120, 1296, 32266, 31756, 13920, 23752, 21015, 16001, 17010, 4227, 14419, 27594, 28132, 31367, 8825, 27909, 620, 28290, 17166, 25074, 15069, 11725, 16536, 22356, 12280, 28913, 10507, 15515, 1924, 10859, 14724, 23745, 6561, 26284, 20025, 24178, 89, 28004, 3760, 3951, 17784, 2048, 10800, 32564, 8861, 4465, 14454, 11481, 1938, 13104, 4776, 19510, 23257, 29567, 14479, 26186, 10375, 30961, 5632, 22750, 13142, 10028, 15515, 31077, 7157, 30958, 26041, 24359, 4770, 15182, 20639, 6302, 18171, 3653, 20728, 20512, 2577, 20076, 8578, 9151, 22207, 19463, 20231, 13422, 13370, 29507, 20367, 12389, 9960, 18876, 6612, 23750, 9078, 25922, 20726, 25216, 14373, 16349, 22640, 25203, 24676, 3342, 25675, 5334, 13988, 29784, 22929, 30678, 30824, 21759, 4869, 20864, 4251, 30480, 24081, 2273, 7207, 19873, 17408, 6764, 7363, 11866, 29549, 11164, 19980, 8757, 24059, 474, 20696, 13185, 24135, 24736, 8391, 23853, 31259, 4831, 2075, 32579, 5349, 9118, 1481, 31923, 9831, 2532, 22991, 26194, 18863, 19417, 11209, 22306, 14410, 23848, 32703, 26068, 1461, 15527, 27970, 20363, 12052, 5434, 19639, 16355, 21286, 26101, 20210, 23090, 9849, 30080, 13063, 26638, 30682, 5312, 3676, 20751, 22800, 29875, 23299, 16341, 16330, 5020, 16455, 6221, 13013, 1377, 18821, 9009, 22418, 6961, 32574, 4814, 29608, 11881, 5737, 17674, 14070, 4793, 10766, 26277, 25036, 29571, 13072, 23487, 7002, 8323, 12875, 4507, 3176, 3509, 16606, 7586, 4680, 2675, 31434, 19883, 7689, 29662, 30653, 3449, 5102, 26240, 17960, 17797, 16158, 13104, 7319, 5886, 11677, 6965, 13634, 6415, 2171, 6062, 2015, 31584, 15436, 12337, 21947, 12767, 1496, 9394, 15369, 3520, 14099, 28326, 16506, 26562, 18511, 23913, 3086, 16309, 2480, 20957, 18473, 30009, 2272, 23893, 20969, 32200, 32517, 18353, 14263, 15351, 23280, 16586, 13596, 23544, 15255, 16656, 8406, 22884, 28358, 23921, 300, 4663, 18449, 4733, 14974, 2845, 25613, 19144, 3104, 18668, 11200, 9360, 20329, 25457, 11349, 15008, 11526, 13679, 5908, 29812, 15508, 19941, 32146, 8606, 17007, 1680, 7717, 25705, 32708, 25521, 21659, 12219, 18670, 8464, 812, 23616, 22015, 4161, 1964, 6340, 412, 11302, 4358, 14817, 27151, 1461, 26853, 11483, 10391, 28155, 1460, 4552, 4866, 353, 30921, 16628, 15230, 30767, 3293, 16259, 8877, 24654, 10432, 26456, 20471, 9298, 19018, 17974, 17444, 952, 11669, 30757, 31274, 24683, 29801, 280, 27203, 1421, 25080, 27084, 17219, 19317, 32460, 9203, 20009, 15604, 14589, 31122, 12276, 8669, 21671, 2984, 32184, 4804, 16539, 9232, 22256, 31237, 9045, 24232, 31254, 9737, 13359, 28083, 1905, 20676, 13524, 32124, 26159, 16514, 7926, 31549, 32691, 26084, 23108, 17214, 17712, 6949, 3734, 31297, 13175, 26786, 26219, 5662, 18701, 29338, 21910, 22955, 8833, 29746, 14388, 18398, 12540, 27580, 24033, 21046, 16154, 23608, 21804, 18006, 14328, 18459, 2888, 16116, 25743, 18768, 5124, 7153, 4928, 27261, 11772, 17865, 23983, 9607, 22289, 16430, 213, 11096, 1304, 20464, 31569, 22752, 22223, 14368, 26111, 32089, 20757, 21109, 15052, 21968, 31834, 1774, 32201, 25057, 30292, 26297, 31870, 30146, 19443, 28244, 6016, 11651, 12184, 13042, 19014, 9619, 24450, 32544, 25912, 7303, 20616, 8872, 11785, 25111, 28942, 31158, 23111, 14185, 6194, 28473, 6192, 1171, 30022, 32396, 6600, 1883, 4995, 30806, 22056, 24384, 17915, 3759, 29977, 6847, 4048, 27780, 6369, 10703, 23716, 23612, 31325, 22958, 7504, 16795, 2896, 15839, 7385, 27367, 4859, 10868, 8608, 32074, 30958, 9097, 11992, 120, 12829, 26129, 31293, 19857, 1078, 28117, 27139, 25929, 4914, 7353, 12045, 28998, 27947, 26433, 20320, 29898, 2157, 10837, 13527, 28817, 26575, 3649, 5144, 32253, 22852, 6912, 16326, 9584, 685, 25018, 15353, 29689, 12529, 24459, 9707, 5172, 7504, 32134, 17396, 28267, 7412, 20986, 20920, 5121, 28361, 1779, 23711, 31249, 7055, 2564, 17541, 18258, 7214, 26948, 13491, 14654, 14921, 407, 10510, 25715, 24341, 25135, 21391, 21593, 17516, 2386, 30195, 19973, 15389, 24157, 948, 14941, 391, 3337, 8247, 31613, 18790, 9709, 19783, 12634, 1004, 10308, 24002, 12709, 1300, 22769, 146, 14067, 1843, 2752, 30687, 2842, 15311, 15343, 20611, 12510, 24245, 11501, 11711, 20685, 32582, 21601, 32044, 28007, 29714, 21614, 9972, 8834, 11432, 21813, 3649, 29677, 21931, 26780, 30198, 28500, 809, 23374, 7582, 9571, 21801, 5892, 10913, 15918, 19075, 31234, 12734, 11473, 13813, 18404, 29877, 18003, 2418, 6042, 10308, 16337, 27581, 25266, 22101, 22488, 19511, 6613, 12406, 12050, 26870, 25237, 26249, 5157, 31510, 25190, 21949, 18136, 32084, 15081, 9149, 30328, 16600, 7025, 6695, 32634, 17491, 3008, 22079, 11361, 330, 21521, 8421, 32226, 9138, 9820, 708, 15942, 24508, 27861, 26829, 25617, 23026, 25013, 27876, 2017, 21891, 21566, 5848, 29080, 7387, 16121, 10649, 189, 22647, 4931, 20645, 29728, 18424, 24071, 16836, 21693, 4470, 10701, 9973, 2019, 6934, 16884, 25768, 19606, 8927, 15163, 4141, 10289, 2249, 25991, 10861, 1616, 32535, 2784, 29400, 4076, 5351, 8124, 26270, 32200, 20232, 18560, 16418, 27148, 17163, 22596, 2732, 25904, 26781, 11478, 7773, 21020, 5396, 3074, 6249, 19854, 21831, 26129, 9088, 9403, 6563, 8592, 9357, 7993, 26747, 21587, 8099, 8220, 2720, 3513, 26932, 25184, 26162, 5680, 30597, 21639, 31669, 18428, 26718, 22402, 14695, 25909, 3846, 25813, 6353, 3855, 7791, 24567, 15005, 16991, 17325, 5879, 29863, 32090, 17580, 13925, 1623, 29343, 30499, 13424, 26413, 28024, 9156, 30540, 25501, 19292, 10678, 15063, 31774, 11961, 30276, 31099, 14974, 20209, 9431, 23638, 29048, 2466, 23329, 30360, 6792, 6443, 13724, 20525, 17918, 5228, 22579, 925, 20818, 7117, 30526, 29488, 22455, 22401, 27828, 22869, 4338, 11020, 11676, 14404, 4717, 16898, 13253, 27875, 9863, 23058, 12215, 26854, 11823, 28228, 5865, 22587, 16561, 10111, 25141, 13733, 32207, 13902, 4232, 4775, 17940, 31203, 16862, 5795, 19813, 6237, 32366, 31043, 15321, 27718, 32289, 31768, 20683, 27488, 1097, 10113, 15405, 27297, 9104, 20175, 8734, 25468, 32302, 8102, 31935, 7778, 22112, 16550, 20547, 26249, 789, 17227, 25926, 10988, 7402, 27922, 32096, 12435, 30552, 7134, 13817, 14868, 14892, 18841, 3423, 18522, 12088, 29470, 15893, 22693, 6217, 26199, 25711, 17362, 8537, 15266, 8795, 8925, 17157, 32378, 13698, 23716, 10561, 18771, 13200, 16621, 29258, 22725, 24783, 21675, 23004, 23021, 21755, 13181, 9382, 30737, 25170, 10872, 24571, 28034, 29418, 28710, 18890, 7111, 20551, 7630, 29904, 28407, 2349, 19958, 32012, 4199, 27059, 1063, 24691, 11397, 14745, 16880, 20454, 20484, 13531, 27949, 3169, 8250, 29318, 27530, 9333, 29382, 11723, 5954, 9720, 2165, 9554, 28973, 6139, 28519, 1233, 13305, 20732, 20589, 3292, 11447, 32093, 11190, 27903, 31898, 27157, 18603, 1034, 10236, 26534, 23831, 31404, 5794, 22863, 12171, 27715, 26945, 17538, 14593, 4595, 18497, 29848, 2495, 9205, 4032, 1732, 30078, 25906, 31962, 29253, 19148, 3345, 16424, 24800, 6575, 909, 6534, 27534, 19851, 9098, 24858, 3954, 7749, 30569, 8594, 28429, 7337, 9178, 10156, 13237, 24073, 29937, 11004, 9027, 2855, 16765, 29674, 15885, 22102, 6293, 8954, 30996, 7387, 28019, 32080, 26750, 14233, 13702, 25203, 28230, 16110, 11458, 20305, 16690, 17880, 13371, 4739, 24581, 20572, 32498, 5587, 17654, 2));
		int o = new MinimizeDifferenceSolution().solve(arr,32270);
		System.out.print(o);
	}
}



class MinimizeDifferenceSolution {
    public int solve(ArrayList<Integer> A, int B) {
        
    	int lowestDifference = Integer.MAX_VALUE;
        Collections.sort(A);
        int l=0;
        int r=A.size()-1;
        
        boolean leftCanMove = true;
        boolean rightCanMove = true;
        
        System.out.println(A.size());
        int loopCount = 0;
        
        while(B>0 && lowestDifference > 0 && (leftCanMove || rightCanMove))
        {
        	loopCount++;
            int leftDiff = A.get(l+1) - A.get(l);
            int rightDiff = A.get(r)  - A.get(r-1);
            
            int leftTotalDiff = leftDiff * (l+1);
            int rightTotalDiff = rightDiff * (A.size()-r);
            
            if(((l+1) <= (A.size()-r)) && leftCanMove)
            {
                if(leftDiff > 0)
                {
                    if(B >= (l+1))
                    {
                    	if(B/(l+1) >= leftDiff)
                    	{
                    		A.set(l, A.get(l)+leftDiff);
                    		B = B - (leftDiff * (l+1));
                    	}
                    	else
                    	{
                    		A.set(l, A.get(l) + (B/(l+1)));
                    		B = B % (l+1);
                    	}
                    }
                    else
                    {
                    	leftCanMove = false;
                    }
                }
                else
                {
                    l++;
                }
            }
            else
            {
            	if(rightDiff > 0)
                {
            		if(B >= (A.size()-r))
                    {
                    	if(B/(A.size()-r) >= rightDiff)
                    	{
                    		A.set(r, A.get(r)-rightDiff);
                    		B = B - (rightDiff * (A.size()-r));
                    	}
                    	else
                    	{
                    		A.set(r, A.get(r) - (B/(A.size()-r)));
                    		B = B % (A.size()-r);
                    	}
                    }
                    else
                    {
                    	rightCanMove = false;
                    }
                }
                else
                {
                    r--;
                }
            	
            }
            
            
            int diff = A.get(r) - A.get(l);
            if(diff < lowestDifference)
            {
            	lowestDifference = diff;
            }
        }
        
        System.out.println(loopCount);
        return lowestDifference;
    }
}
 
